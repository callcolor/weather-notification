/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package ru.gelin.android.weather.notification.skin.blacktextplus;

public final class R {
  public static final class array {
    public static final int notification_back_style_entries=0x7f010000;
    public static final int notification_back_style_values=0x7f010001;
    public static final int notification_style_entries=0x7f010002;
    public static final int notification_style_values=0x7f010003;
    public static final int notification_text_style_entries=0x7f010004;
    public static final int notification_text_style_values=0x7f010005;
    public static final int temp_unit_entries=0x7f010006;
    public static final int temp_unit_values=0x7f010007;
    public static final int wind_speed_unit_entries=0x7f010008;
    public static final int wind_speed_unit_values=0x7f010009;
  }
  public static final class attr {
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f020000;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f020001;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f020002;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f020003;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f020004;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f020005;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f020006;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f020007;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f020008;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f020009;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f02000a;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f02000b;
  }
  public static final class color {
    public static final int notification_action_color_filter=0x7f030000;
    public static final int notification_icon_bg_color=0x7f030001;
    public static final int ripple_material_light=0x7f030002;
    public static final int secondary_text_default_material_light=0x7f030003;
  }
  public static final class dimen {
    public static final int compat_button_inset_horizontal_material=0x7f040000;
    public static final int compat_button_inset_vertical_material=0x7f040001;
    public static final int compat_button_padding_horizontal_material=0x7f040002;
    public static final int compat_button_padding_vertical_material=0x7f040003;
    public static final int compat_control_corner_material=0x7f040004;
    public static final int compat_notification_large_icon_max_height=0x7f040005;
    public static final int compat_notification_large_icon_max_width=0x7f040006;
    public static final int notification_action_icon_size=0x7f040007;
    public static final int notification_action_text_size=0x7f040008;
    public static final int notification_big_circle_margin=0x7f040009;
    public static final int notification_content_margin_start=0x7f04000a;
    public static final int notification_large_icon_height=0x7f04000b;
    public static final int notification_large_icon_width=0x7f04000c;
    public static final int notification_main_column_padding_top=0x7f04000d;
    public static final int notification_media_narrow_margin=0x7f04000e;
    public static final int notification_right_icon_size=0x7f04000f;
    public static final int notification_right_side_padding_top=0x7f040010;
    public static final int notification_small_icon_background_padding=0x7f040011;
    public static final int notification_small_icon_size_as_large=0x7f040012;
    public static final int notification_subtext_size=0x7f040013;
    public static final int notification_top_pad=0x7f040014;
    public static final int notification_top_pad_large_text=0x7f040015;
  }
  public static final class drawable {
    public static final int black_temp_0=0x7f050000;
    public static final int black_temp_minus_1=0x7f050001;
    public static final int black_temp_minus_10=0x7f050002;
    public static final int black_temp_minus_11=0x7f050003;
    public static final int black_temp_minus_12=0x7f050004;
    public static final int black_temp_minus_13=0x7f050005;
    public static final int black_temp_minus_14=0x7f050006;
    public static final int black_temp_minus_15=0x7f050007;
    public static final int black_temp_minus_16=0x7f050008;
    public static final int black_temp_minus_17=0x7f050009;
    public static final int black_temp_minus_18=0x7f05000a;
    public static final int black_temp_minus_19=0x7f05000b;
    public static final int black_temp_minus_2=0x7f05000c;
    public static final int black_temp_minus_20=0x7f05000d;
    public static final int black_temp_minus_21=0x7f05000e;
    public static final int black_temp_minus_22=0x7f05000f;
    public static final int black_temp_minus_23=0x7f050010;
    public static final int black_temp_minus_24=0x7f050011;
    public static final int black_temp_minus_25=0x7f050012;
    public static final int black_temp_minus_26=0x7f050013;
    public static final int black_temp_minus_27=0x7f050014;
    public static final int black_temp_minus_28=0x7f050015;
    public static final int black_temp_minus_29=0x7f050016;
    public static final int black_temp_minus_3=0x7f050017;
    public static final int black_temp_minus_30=0x7f050018;
    public static final int black_temp_minus_31=0x7f050019;
    public static final int black_temp_minus_32=0x7f05001a;
    public static final int black_temp_minus_33=0x7f05001b;
    public static final int black_temp_minus_34=0x7f05001c;
    public static final int black_temp_minus_35=0x7f05001d;
    public static final int black_temp_minus_36=0x7f05001e;
    public static final int black_temp_minus_37=0x7f05001f;
    public static final int black_temp_minus_38=0x7f050020;
    public static final int black_temp_minus_39=0x7f050021;
    public static final int black_temp_minus_4=0x7f050022;
    public static final int black_temp_minus_40=0x7f050023;
    public static final int black_temp_minus_41=0x7f050024;
    public static final int black_temp_minus_42=0x7f050025;
    public static final int black_temp_minus_43=0x7f050026;
    public static final int black_temp_minus_44=0x7f050027;
    public static final int black_temp_minus_45=0x7f050028;
    public static final int black_temp_minus_46=0x7f050029;
    public static final int black_temp_minus_47=0x7f05002a;
    public static final int black_temp_minus_48=0x7f05002b;
    public static final int black_temp_minus_49=0x7f05002c;
    public static final int black_temp_minus_5=0x7f05002d;
    public static final int black_temp_minus_50=0x7f05002e;
    public static final int black_temp_minus_51=0x7f05002f;
    public static final int black_temp_minus_52=0x7f050030;
    public static final int black_temp_minus_53=0x7f050031;
    public static final int black_temp_minus_54=0x7f050032;
    public static final int black_temp_minus_55=0x7f050033;
    public static final int black_temp_minus_56=0x7f050034;
    public static final int black_temp_minus_57=0x7f050035;
    public static final int black_temp_minus_58=0x7f050036;
    public static final int black_temp_minus_59=0x7f050037;
    public static final int black_temp_minus_6=0x7f050038;
    public static final int black_temp_minus_60=0x7f050039;
    public static final int black_temp_minus_7=0x7f05003a;
    public static final int black_temp_minus_8=0x7f05003b;
    public static final int black_temp_minus_9=0x7f05003c;
    public static final int black_temp_plus_1=0x7f05003d;
    public static final int black_temp_plus_10=0x7f05003e;
    public static final int black_temp_plus_100=0x7f05003f;
    public static final int black_temp_plus_101=0x7f050040;
    public static final int black_temp_plus_102=0x7f050041;
    public static final int black_temp_plus_103=0x7f050042;
    public static final int black_temp_plus_104=0x7f050043;
    public static final int black_temp_plus_105=0x7f050044;
    public static final int black_temp_plus_106=0x7f050045;
    public static final int black_temp_plus_107=0x7f050046;
    public static final int black_temp_plus_108=0x7f050047;
    public static final int black_temp_plus_109=0x7f050048;
    public static final int black_temp_plus_11=0x7f050049;
    public static final int black_temp_plus_110=0x7f05004a;
    public static final int black_temp_plus_111=0x7f05004b;
    public static final int black_temp_plus_112=0x7f05004c;
    public static final int black_temp_plus_113=0x7f05004d;
    public static final int black_temp_plus_114=0x7f05004e;
    public static final int black_temp_plus_115=0x7f05004f;
    public static final int black_temp_plus_116=0x7f050050;
    public static final int black_temp_plus_117=0x7f050051;
    public static final int black_temp_plus_118=0x7f050052;
    public static final int black_temp_plus_119=0x7f050053;
    public static final int black_temp_plus_12=0x7f050054;
    public static final int black_temp_plus_120=0x7f050055;
    public static final int black_temp_plus_121=0x7f050056;
    public static final int black_temp_plus_122=0x7f050057;
    public static final int black_temp_plus_123=0x7f050058;
    public static final int black_temp_plus_124=0x7f050059;
    public static final int black_temp_plus_125=0x7f05005a;
    public static final int black_temp_plus_126=0x7f05005b;
    public static final int black_temp_plus_127=0x7f05005c;
    public static final int black_temp_plus_128=0x7f05005d;
    public static final int black_temp_plus_129=0x7f05005e;
    public static final int black_temp_plus_13=0x7f05005f;
    public static final int black_temp_plus_130=0x7f050060;
    public static final int black_temp_plus_14=0x7f050061;
    public static final int black_temp_plus_15=0x7f050062;
    public static final int black_temp_plus_16=0x7f050063;
    public static final int black_temp_plus_17=0x7f050064;
    public static final int black_temp_plus_18=0x7f050065;
    public static final int black_temp_plus_19=0x7f050066;
    public static final int black_temp_plus_2=0x7f050067;
    public static final int black_temp_plus_20=0x7f050068;
    public static final int black_temp_plus_21=0x7f050069;
    public static final int black_temp_plus_22=0x7f05006a;
    public static final int black_temp_plus_23=0x7f05006b;
    public static final int black_temp_plus_24=0x7f05006c;
    public static final int black_temp_plus_25=0x7f05006d;
    public static final int black_temp_plus_26=0x7f05006e;
    public static final int black_temp_plus_27=0x7f05006f;
    public static final int black_temp_plus_28=0x7f050070;
    public static final int black_temp_plus_29=0x7f050071;
    public static final int black_temp_plus_3=0x7f050072;
    public static final int black_temp_plus_30=0x7f050073;
    public static final int black_temp_plus_31=0x7f050074;
    public static final int black_temp_plus_32=0x7f050075;
    public static final int black_temp_plus_33=0x7f050076;
    public static final int black_temp_plus_34=0x7f050077;
    public static final int black_temp_plus_35=0x7f050078;
    public static final int black_temp_plus_36=0x7f050079;
    public static final int black_temp_plus_37=0x7f05007a;
    public static final int black_temp_plus_38=0x7f05007b;
    public static final int black_temp_plus_39=0x7f05007c;
    public static final int black_temp_plus_4=0x7f05007d;
    public static final int black_temp_plus_40=0x7f05007e;
    public static final int black_temp_plus_41=0x7f05007f;
    public static final int black_temp_plus_42=0x7f050080;
    public static final int black_temp_plus_43=0x7f050081;
    public static final int black_temp_plus_44=0x7f050082;
    public static final int black_temp_plus_45=0x7f050083;
    public static final int black_temp_plus_46=0x7f050084;
    public static final int black_temp_plus_47=0x7f050085;
    public static final int black_temp_plus_48=0x7f050086;
    public static final int black_temp_plus_49=0x7f050087;
    public static final int black_temp_plus_5=0x7f050088;
    public static final int black_temp_plus_50=0x7f050089;
    public static final int black_temp_plus_51=0x7f05008a;
    public static final int black_temp_plus_52=0x7f05008b;
    public static final int black_temp_plus_53=0x7f05008c;
    public static final int black_temp_plus_54=0x7f05008d;
    public static final int black_temp_plus_55=0x7f05008e;
    public static final int black_temp_plus_56=0x7f05008f;
    public static final int black_temp_plus_57=0x7f050090;
    public static final int black_temp_plus_58=0x7f050091;
    public static final int black_temp_plus_59=0x7f050092;
    public static final int black_temp_plus_6=0x7f050093;
    public static final int black_temp_plus_60=0x7f050094;
    public static final int black_temp_plus_61=0x7f050095;
    public static final int black_temp_plus_62=0x7f050096;
    public static final int black_temp_plus_63=0x7f050097;
    public static final int black_temp_plus_64=0x7f050098;
    public static final int black_temp_plus_65=0x7f050099;
    public static final int black_temp_plus_66=0x7f05009a;
    public static final int black_temp_plus_67=0x7f05009b;
    public static final int black_temp_plus_68=0x7f05009c;
    public static final int black_temp_plus_69=0x7f05009d;
    public static final int black_temp_plus_7=0x7f05009e;
    public static final int black_temp_plus_70=0x7f05009f;
    public static final int black_temp_plus_71=0x7f0500a0;
    public static final int black_temp_plus_72=0x7f0500a1;
    public static final int black_temp_plus_73=0x7f0500a2;
    public static final int black_temp_plus_74=0x7f0500a3;
    public static final int black_temp_plus_75=0x7f0500a4;
    public static final int black_temp_plus_76=0x7f0500a5;
    public static final int black_temp_plus_77=0x7f0500a6;
    public static final int black_temp_plus_78=0x7f0500a7;
    public static final int black_temp_plus_79=0x7f0500a8;
    public static final int black_temp_plus_8=0x7f0500a9;
    public static final int black_temp_plus_80=0x7f0500aa;
    public static final int black_temp_plus_81=0x7f0500ab;
    public static final int black_temp_plus_82=0x7f0500ac;
    public static final int black_temp_plus_83=0x7f0500ad;
    public static final int black_temp_plus_84=0x7f0500ae;
    public static final int black_temp_plus_85=0x7f0500af;
    public static final int black_temp_plus_86=0x7f0500b0;
    public static final int black_temp_plus_87=0x7f0500b1;
    public static final int black_temp_plus_88=0x7f0500b2;
    public static final int black_temp_plus_89=0x7f0500b3;
    public static final int black_temp_plus_9=0x7f0500b4;
    public static final int black_temp_plus_90=0x7f0500b5;
    public static final int black_temp_plus_91=0x7f0500b6;
    public static final int black_temp_plus_92=0x7f0500b7;
    public static final int black_temp_plus_93=0x7f0500b8;
    public static final int black_temp_plus_94=0x7f0500b9;
    public static final int black_temp_plus_95=0x7f0500ba;
    public static final int black_temp_plus_96=0x7f0500bb;
    public static final int black_temp_plus_97=0x7f0500bc;
    public static final int black_temp_plus_98=0x7f0500bd;
    public static final int black_temp_plus_99=0x7f0500be;
    public static final int condition_alert=0x7f0500bf;
    public static final int condition_alert_16=0x7f0500c0;
    public static final int condition_alert_24=0x7f0500c1;
    public static final int condition_alert_48=0x7f0500c2;
    public static final int condition_alert_64=0x7f0500c3;
    public static final int condition_clear=0x7f0500c4;
    public static final int condition_clear_16=0x7f0500c5;
    public static final int condition_clear_24=0x7f0500c6;
    public static final int condition_clear_48=0x7f0500c7;
    public static final int condition_clear_64=0x7f0500c8;
    public static final int condition_clouds=0x7f0500c9;
    public static final int condition_clouds_16=0x7f0500ca;
    public static final int condition_clouds_24=0x7f0500cb;
    public static final int condition_clouds_48=0x7f0500cc;
    public static final int condition_clouds_64=0x7f0500cd;
    public static final int condition_mist=0x7f0500ce;
    public static final int condition_mist_16=0x7f0500cf;
    public static final int condition_mist_24=0x7f0500d0;
    public static final int condition_mist_48=0x7f0500d1;
    public static final int condition_mist_64=0x7f0500d2;
    public static final int condition_overcast=0x7f0500d3;
    public static final int condition_overcast_16=0x7f0500d4;
    public static final int condition_overcast_24=0x7f0500d5;
    public static final int condition_overcast_48=0x7f0500d6;
    public static final int condition_overcast_64=0x7f0500d7;
    public static final int condition_rain=0x7f0500d8;
    public static final int condition_rain_16=0x7f0500d9;
    public static final int condition_rain_24=0x7f0500da;
    public static final int condition_rain_48=0x7f0500db;
    public static final int condition_rain_64=0x7f0500dc;
    public static final int condition_shower=0x7f0500dd;
    public static final int condition_shower_16=0x7f0500de;
    public static final int condition_shower_24=0x7f0500df;
    public static final int condition_shower_48=0x7f0500e0;
    public static final int condition_shower_64=0x7f0500e1;
    public static final int condition_snow=0x7f0500e2;
    public static final int condition_snow_16=0x7f0500e3;
    public static final int condition_snow_24=0x7f0500e4;
    public static final int condition_snow_48=0x7f0500e5;
    public static final int condition_snow_64=0x7f0500e6;
    public static final int condition_storm=0x7f0500e7;
    public static final int condition_storm_16=0x7f0500e8;
    public static final int condition_storm_24=0x7f0500e9;
    public static final int condition_storm_48=0x7f0500ea;
    public static final int condition_storm_64=0x7f0500eb;
    public static final int icon=0x7f0500ec;
    public static final int notification_action_background=0x7f0500ed;
    public static final int notification_bg=0x7f0500ee;
    public static final int notification_bg_low=0x7f0500ef;
    public static final int notification_bg_low_normal=0x7f0500f0;
    public static final int notification_bg_low_pressed=0x7f0500f1;
    public static final int notification_bg_normal=0x7f0500f2;
    public static final int notification_bg_normal_pressed=0x7f0500f3;
    public static final int notification_icon_background=0x7f0500f4;
    public static final int notification_template_icon_bg=0x7f0500f5;
    public static final int notification_template_icon_low_bg=0x7f0500f6;
    public static final int notification_tile_bg=0x7f0500f7;
    public static final int notify_panel_notification_icon_bg=0x7f0500f8;
    public static final int status_icon=0x7f0500f9;
    public static final int temp_icon_black=0x7f0500fa;
  }
  public static final class id {
    public static final int action_container=0x7f060000;
    public static final int action_divider=0x7f060001;
    public static final int action_image=0x7f060002;
    public static final int action_text=0x7f060003;
    public static final int actions=0x7f060004;
    public static final int async=0x7f060005;
    public static final int blocking=0x7f060006;
    public static final int chronometer=0x7f060007;
    public static final int close_button=0x7f060008;
    public static final int condition=0x7f060009;
    public static final int condition_icon=0x7f06000a;
    public static final int content=0x7f06000b;
    public static final int current_condition=0x7f06000c;
    public static final int current_temp=0x7f06000d;
    public static final int current_temp_alt=0x7f06000e;
    public static final int forecast_1=0x7f06000f;
    public static final int forecast_2=0x7f060010;
    public static final int forecast_3=0x7f060011;
    public static final int forecast_condition_1=0x7f060012;
    public static final int forecast_condition_2=0x7f060013;
    public static final int forecast_condition_3=0x7f060014;
    public static final int forecast_condition_icon_1=0x7f060015;
    public static final int forecast_condition_icon_2=0x7f060016;
    public static final int forecast_condition_icon_3=0x7f060017;
    public static final int forecast_day_1=0x7f060018;
    public static final int forecast_day_2=0x7f060019;
    public static final int forecast_day_3=0x7f06001a;
    public static final int forecast_high_temp_1=0x7f06001b;
    public static final int forecast_high_temp_2=0x7f06001c;
    public static final int forecast_high_temp_3=0x7f06001d;
    public static final int forecast_low_temp_1=0x7f06001e;
    public static final int forecast_low_temp_2=0x7f06001f;
    public static final int forecast_low_temp_3=0x7f060020;
    public static final int forecast_url=0x7f060021;
    public static final int forecasts=0x7f060022;
    public static final int forever=0x7f060023;
    public static final int high_low_temp_separator=0x7f060024;
    public static final int high_temp=0x7f060025;
    public static final int humidity=0x7f060026;
    public static final int icon=0x7f060027;
    public static final int icon_group=0x7f060028;
    public static final int info=0x7f060029;
    public static final int italic=0x7f06002a;
    public static final int line1=0x7f06002b;
    public static final int line3=0x7f06002c;
    public static final int location=0x7f06002d;
    public static final int low_temp=0x7f06002e;
    public static final int normal=0x7f06002f;
    public static final int notification_background=0x7f060030;
    public static final int notification_main_column=0x7f060031;
    public static final int notification_main_column_container=0x7f060032;
    public static final int preferences_button=0x7f060033;
    public static final int refresh_button=0x7f060034;
    public static final int right_icon=0x7f060035;
    public static final int right_side=0x7f060036;
    public static final int switchWidget=0x7f060037;
    public static final int tag_transition_group=0x7f060038;
    public static final int tag_unhandled_key_event_manager=0x7f060039;
    public static final int tag_unhandled_key_listeners=0x7f06003a;
    public static final int temp=0x7f06003b;
    public static final int text=0x7f06003c;
    public static final int text2=0x7f06003d;
    public static final int time=0x7f06003e;
    public static final int title=0x7f06003f;
    public static final int update_time=0x7f060040;
    public static final int update_time_short=0x7f060041;
    public static final int weather_info=0x7f060042;
    public static final int wind=0x7f060043;
  }
  public static final class integer {
    public static final int status_bar_notification_info_maxnum=0x7f070000;
  }
  public static final class layout {
    public static final int notification=0x7f080000;
    public static final int notification_action=0x7f080001;
    public static final int notification_action_tombstone=0x7f080002;
    public static final int notification_forecasts=0x7f080003;
    public static final int notification_forecasts_update=0x7f080004;
    public static final int notification_icon=0x7f080005;
    public static final int notification_icon_forecasts=0x7f080006;
    public static final int notification_icon_forecasts_update=0x7f080007;
    public static final int notification_icon_update=0x7f080008;
    public static final int notification_template_custom_big=0x7f080009;
    public static final int notification_template_icon_group=0x7f08000a;
    public static final int notification_template_part_chronometer=0x7f08000b;
    public static final int notification_template_part_time=0x7f08000c;
    public static final int notification_update=0x7f08000d;
    public static final int preference_widget_switch=0x7f08000e;
    public static final int weather_info=0x7f08000f;
  }
  public static final class string {
    public static final int DEFAULT_NOTIFICATION_TEXT_STYLE=0x7f090000;
    public static final int app_name=0x7f090001;
    public static final int celsius=0x7f090002;
    public static final int celsius_and_fahrenheit=0x7f090003;
    public static final int condition_clouds_broken=0x7f090004;
    public static final int condition_clouds_clear=0x7f090005;
    public static final int condition_clouds_few=0x7f090006;
    public static final int condition_clouds_overcast=0x7f090007;
    public static final int condition_clouds_scattered=0x7f090008;
    public static final int condition_cold=0x7f090009;
    public static final int condition_drizzle=0x7f09000a;
    public static final int condition_drizzle_heavy=0x7f09000b;
    public static final int condition_drizzle_light=0x7f09000c;
    public static final int condition_drizzle_rain=0x7f09000d;
    public static final int condition_drizzle_rain_heavy=0x7f09000e;
    public static final int condition_drizzle_rain_light=0x7f09000f;
    public static final int condition_drizzle_shower=0x7f090010;
    public static final int condition_fog=0x7f090011;
    public static final int condition_hail=0x7f090012;
    public static final int condition_haze=0x7f090013;
    public static final int condition_hot=0x7f090014;
    public static final int condition_hurricane=0x7f090015;
    public static final int condition_mist=0x7f090016;
    public static final int condition_rain=0x7f090017;
    public static final int condition_rain_extreme=0x7f090018;
    public static final int condition_rain_freezing=0x7f090019;
    public static final int condition_rain_heavy=0x7f09001a;
    public static final int condition_rain_light=0x7f09001b;
    public static final int condition_rain_shower=0x7f09001c;
    public static final int condition_rain_shower_heavy=0x7f09001d;
    public static final int condition_rain_shower_light=0x7f09001e;
    public static final int condition_rain_very_heavy=0x7f09001f;
    public static final int condition_sand_whirls=0x7f090020;
    public static final int condition_sleet=0x7f090021;
    public static final int condition_smoke=0x7f090022;
    public static final int condition_snow=0x7f090023;
    public static final int condition_snow_heavy=0x7f090024;
    public static final int condition_snow_light=0x7f090025;
    public static final int condition_snow_shower=0x7f090026;
    public static final int condition_thunderstorm=0x7f090027;
    public static final int condition_thunderstorm_drizzle=0x7f090028;
    public static final int condition_thunderstorm_drizzle_heavy=0x7f090029;
    public static final int condition_thunderstorm_drizzle_light=0x7f09002a;
    public static final int condition_thunderstorm_heavy=0x7f09002b;
    public static final int condition_thunderstorm_light=0x7f09002c;
    public static final int condition_thunderstorm_ragged=0x7f09002d;
    public static final int condition_thunderstorm_rain=0x7f09002e;
    public static final int condition_thunderstorm_rain_heavy=0x7f09002f;
    public static final int condition_thunderstorm_rain_light=0x7f090030;
    public static final int condition_tornado=0x7f090031;
    public static final int condition_tropical_storm=0x7f090032;
    public static final int condition_windy=0x7f090033;
    public static final int fahrenheit=0x7f090034;
    public static final int fahrenheit_and_celsius=0x7f090035;
    public static final int forecast_day_format=0x7f090036;
    public static final int forecast_text=0x7f090037;
    public static final int humidity_caption=0x7f090038;
    public static final int notification=0x7f090039;
    public static final int notification_back_style=0x7f09003a;
    public static final int notification_content_text=0x7f09003b;
    public static final int notification_content_title=0x7f09003c;
    public static final int notification_forecast_style=0x7f09003d;
    public static final int notification_icon_style=0x7f09003e;
    public static final int notification_style=0x7f09003f;
    public static final int notification_style_black_back=0x7f090040;
    public static final int notification_style_black_text=0x7f090041;
    public static final int notification_style_custom=0x7f090042;
    public static final int notification_style_default_back=0x7f090043;
    public static final int notification_style_standard=0x7f090044;
    public static final int notification_style_white_back=0x7f090045;
    public static final int notification_style_white_text=0x7f090046;
    public static final int notification_text_style=0x7f090047;
    public static final int notification_ticker=0x7f090048;
    public static final int skin_name=0x7f090049;
    public static final int skin_preferences=0x7f09004a;
    public static final int skin_tap_to_config=0x7f09004b;
    public static final int status_bar_notification_info_overflow=0x7f09004c;
    public static final int switch_off=0x7f09004d;
    public static final int switch_on=0x7f09004e;
    public static final int temp_unit=0x7f09004f;
    public static final int unknown_weather=0x7f090050;
    public static final int update_date_format=0x7f090051;
    public static final int update_time_format=0x7f090052;
    public static final int update_time_short=0x7f090053;
    public static final int weather=0x7f090054;
    public static final int wind_caption=0x7f090055;
    public static final int wind_dir_e=0x7f090056;
    public static final int wind_dir_ene=0x7f090057;
    public static final int wind_dir_ese=0x7f090058;
    public static final int wind_dir_n=0x7f090059;
    public static final int wind_dir_ne=0x7f09005a;
    public static final int wind_dir_nne=0x7f09005b;
    public static final int wind_dir_nnw=0x7f09005c;
    public static final int wind_dir_nw=0x7f09005d;
    public static final int wind_dir_s=0x7f09005e;
    public static final int wind_dir_se=0x7f09005f;
    public static final int wind_dir_sse=0x7f090060;
    public static final int wind_dir_ssw=0x7f090061;
    public static final int wind_dir_sw=0x7f090062;
    public static final int wind_dir_w=0x7f090063;
    public static final int wind_dir_wnw=0x7f090064;
    public static final int wind_dir_wsw=0x7f090065;
    public static final int wind_speed_unit=0x7f090066;
    public static final int wind_speed_unit_kmph=0x7f090067;
    public static final int wind_speed_unit_mph=0x7f090068;
    public static final int wind_speed_unit_mps=0x7f090069;
  }
  public static final class style {
    public static final int TextAppearance_Compat_Notification=0x7f0a0000;
    public static final int TextAppearance_Compat_Notification_Info=0x7f0a0001;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f0a0002;
    public static final int TextAppearance_Compat_Notification_Time=0x7f0a0003;
    public static final int TextAppearance_Compat_Notification_Title=0x7f0a0004;
    public static final int Theme_Dialog=0x7f0a0005;
    public static final int Weather=0x7f0a0006;
    public static final int Weather_Condition=0x7f0a0007;
    public static final int Weather_CurrentTemp=0x7f0a0008;
    public static final int Weather_ForecastConditionIcon=0x7f0a0009;
    public static final int Weather_Text=0x7f0a000a;
    public static final int WeatherInfo=0x7f0a000b;
    public static final int WeatherInfo_AltTemp=0x7f0a000c;
    public static final int WeatherInfo_CloseButton=0x7f0a000d;
    public static final int WeatherInfo_Condition=0x7f0a000e;
    public static final int WeatherInfo_ConditionDetails=0x7f0a000f;
    public static final int WeatherInfo_ConditionIcon=0x7f0a0010;
    public static final int WeatherInfo_CurrentTemp=0x7f0a0011;
    public static final int WeatherInfo_ForecastCondition=0x7f0a0012;
    public static final int WeatherInfo_ForecastConditionIcon=0x7f0a0013;
    public static final int WeatherInfo_ForecastRow=0x7f0a0014;
    public static final int WeatherInfo_Location=0x7f0a0015;
    public static final int WeatherInfo_MultilineText=0x7f0a0016;
    public static final int WeatherInfo_Text=0x7f0a0017;
    public static final int WeatherInfo_UpdateTime=0x7f0a0018;
    public static final int Widget_Compat_NotificationActionContainer=0x7f0a0019;
    public static final int Widget_Compat_NotificationActionText=0x7f0a001a;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha ru.gelin.android.weather.notification.skin.blacktextplus:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f020000
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     */
    public static final int[] FontFamily={
      0x7f020002, 0x7f020003, 0x7f020004, 0x7f020005, 
      0x7f020006, 0x7f020007
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font ru.gelin.android.weather.notification.skin.blacktextplus:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle ru.gelin.android.weather.notification.skin.blacktextplus:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings ru.gelin.android.weather.notification.skin.blacktextplus:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight ru.gelin.android.weather.notification.skin.blacktextplus:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex ru.gelin.android.weather.notification.skin.blacktextplus:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f020001, 0x7f020008, 0x7f020009, 
      0x7f02000a, 0x7f02000b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name ru.gelin.android.weather.notification.skin.blacktextplus:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
  }
  public static final class xml {
    public static final int skin_preferences=0x7f0c0000;
  }
}